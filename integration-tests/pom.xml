<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.github.nethad.clustermeister</groupId>
		<artifactId>clustermeister</artifactId>
		<version>0.1-SNAPSHOT</version>
	</parent>
	<groupId>com.github.nethad.clustermeister</groupId>
	<artifactId>integration-tests</artifactId>
	<version>0.1-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>Clustermeister Integration Tests</name>
	<description>
		A sub-module to include "real-world" scenarios and tests.
	</description>
	<repositories>
		<repository>
			<id>typesafe</id>
			<name>Typesafe Repository</name>
			<url>http://repo.typesafe.com/typesafe/releases/</url>
		</repository>
		<repository>
			<id>public</id>
			<name>ifi Public Repositories</name>
			<url>https://maven.ifi.uzh.ch/maven2/content/groups/public/</url>
		</repository>
	</repositories>
	<dependencies>
		<dependency>
			<groupId>com.github.nethad.clustermeister</groupId>
			<artifactId>cli</artifactId>
		</dependency>
		<!-- <dependency> <groupId>com.github.nethad.clustermeister</groupId> <artifactId>node</artifactId> 
			<scope>runtime</scope> </dependency> -->
		<dependency>
			<groupId>com.github.nethad.clustermeister</groupId>
			<artifactId>driver</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-compress</artifactId>
            <version>1.4</version>
        </dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.jvnet.opendmk</groupId>
			<artifactId>jmxremote_optional</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>com.typesafe.akka</groupId>
			<artifactId>akka-actor</artifactId>
			<version>2.0</version>
		</dependency>
		<dependency>
			<groupId>com.typesafe.akka</groupId>
			<artifactId>akka-remote</artifactId>
			<version>2.0</version>
		</dependency>
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-library</artifactId>
			<version>${scala.version}</version>
			<scope>compile</scope>
		</dependency>
        <dependency>
            <groupId>com.signalcollect</groupId>
            <artifactId>signal-collect-core</artifactId>
            <version>2.0.0-SNAPSHOT</version>
        </dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.scala-tools</groupId>
				<artifactId>maven-scala-plugin</artifactId>
				<version>2.15.2</version>
				<executions>
					<execution>
						<id>compile</id>
						<goals>
							<goal>compile</goal>
						</goals>
						<phase>compile</phase>
					</execution>
					<execution>
						<id>test-compile</id>
						<goals>
							<goal>testCompile</goal>
						</goals>
						<phase>test-compile</phase>
					</execution>
					<execution>
						<phase>process-resources</phase>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<scalaVersion>${scala.version}</scalaVersion>
					<args>
						<!-- to support Java/Scala mix -->
						<arg>-make:transitivenocp</arg>
						<arg>-dependencyfile</arg>
						<arg>${project.build.directory}/.scala_dependencies</arg>
					</args>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-jppf-zips</id>
						<goals>
							<goal>copy</goal>
						</goals>
						<phase>generate-resources</phase>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>com.github.nethad.clustermeister</groupId>
									<artifactId>node</artifactId>
									<version>${jppf.node.version}</version>
									<type>zip</type>
									<classifier>node</classifier>
									<overWrite>true</overWrite>
									<outputDirectory>${project.build.directory}/classes
									</outputDirectory>
									<destFileName>jppf-node.zip</destFileName>
								</artifactItem>
							</artifactItems>
							<overWriteSnapshots>true</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
							<overWriteReleases>true</overWriteReleases>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<properties>
		<project.build.sourceEncoding>
			UTF-8
		</project.build.sourceEncoding>
		<project.reporting.outputEncoding>
			UTF-8
		</project.reporting.outputEncoding>
		<scala.version>2.9.1-1</scala.version>
	</properties>
</project>